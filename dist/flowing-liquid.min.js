/*!
  * flowing-liquid v0.1.0
  * (c) 2018 Bowen<Github: lbwa>
  * @license MIT
  */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):t.FlowingLiquid=e()}(this,function(){"use strict";class t{constructor({canvasWidth:t,canvasHeight:e,waveWidth:s=.055,waveHeight:i=6,xOffset:a=0,speed:n=.04,colors:h=["#DBB77A","#BF8F3B"]}={}){this.points=[],this.startX=0,this.canvasWidth=t,this.canvasHeight=e,this.waveWidth=s,this.waveHeight=i,this.xOffset=a,this.speed=n,this.colors=h}getChartColor(t){const e=this.canvasWidth/2,s=t.createLinearGradient(e,e,e,this.canvasHeight);return s.addColorStop(0,this.colors[0]),s.addColorStop(1,this.colors[1]),s}render(t){const e=this.points;t.save(),t.beginPath(),this.points.forEach(e=>{t.lineTo(e.x,e.y)}),t.lineTo(this.canvasWidth,this.canvasHeight),t.lineTo(this.startX,this.canvasHeight),t.lineTo(e[0].x,e[0].y),t.fillStyle=this.getChartColor(t),t.fill(),t.restore()}createPointsMap({currentLine:t}){this.points=[];const{startX:e,waveHeight:s,waveWidth:i,canvasWidth:a,canvasHeight:n,xOffset:h}=this;for(let r=e;r<e+a;r+=20/a){const a=Math.sin((e+r)*i+h);this.points.push({x:r,y:n*(1-t/100)+a*s})}this.xOffset+=this.speed}}return class{constructor({el:e,canvasWidth:s=500,canvasHeight:i=500,waterline:a=60,colors:n=["#F39C6B","#A0563B","rgba(243, 156, 107, 0.48)","rgba(160, 86, 59, 0.48)"]}){if("string"!=typeof e)throw new Error("Parameter el should be a String !");const h=this.canvas=document.querySelector(e);this.canvasWidth=h.width=s,this.canvasHeight=h.height=i,this.hasRenderedContainer=!1,this.currentLine=0,this.waterline=a,this.colors=n,this.waves=[new t({canvasWidth:this.canvasWidth,canvasHeight:this.canvasHeight,waveWidth:.055,waveHeight:4,colors:[this.colors[0],this.colors[1]],xOffset:0,speed:.04}),new t({canvasWidth:this.canvasWidth,canvasHeight:this.canvasHeight,waveWidth:.04,waveHeight:7,colors:[this.colors[2],this.colors[3]],xOffset:2,speed:.02})]}render(t=5){const e=this.canvas.getContext("2d");e.clearRect(0,0,this.canvasWidth,this.canvasHeight),this.hasRenderedContainer||this.drawContainer(e),this.currentLine<this.waterline&&(this.currentLine+=1),this.waves.forEach((s,i)=>{s.createPointsMap({currentLine:this.currentLine+i*t}),s.render(e)}),window.requestAnimationFrame(this.render.bind(this,t))}drawContainer(t){const e=this.canvasWidth/2,s=e-4;t.lineWidth=4,t.beginPath(),t.arc(e,e,s,0,2*Math.PI),t.strokeStyle="rgba(186, 165, 130, 0.3)",t.stroke(),t.clip(),this.hasRenderedContainer=!0}}});
