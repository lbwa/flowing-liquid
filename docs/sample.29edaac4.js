(window.webpackJsonp=window.webpackJsonp||[]).push([[1],[function(t,s,e){"use strict";e.r(s);new class{constructor({el:t,canvasWidth:s=500,canvasHeight:e=500,startX:i=0,xOffset:a=0,waveWidth:h=.05,waveHeight:n=20}){if("string"!=typeof t)throw new Error("el should be a String !");this.canvas=document.querySelector(t),this.context=this.canvas.getContext("2d"),this.canvasWidth=this.canvas.width=s,this.canvasHeight=this.canvas.height=e,this.startX=i,this.xOffset=a,this.waveWidth=h,this.waveHeight=n}frameRender(t){const s=[],e=this.startX+this.canvasWidth,i=this.startX,a=this.waveWidth,h=this.waveHeight,n=this.canvasWidth,r=this.canvasHeight,c=this.context,o=Math.sin.bind(Math);this.context.beginPath();for(let d=i;d<e;d+=20/n){const e=h*o((i+d)*a+t);s.push({x:d,y:r/2+e}),c.lineTo(d,r/2+e)}c.lineTo(n,r),c.lineTo(i,r),c.lineTo(s[0].x,s[0].y),c.stroke()}animator(){this.context.clearRect(0,0,this.canvasWidth,this.canvasHeight),this.frameRender(this.xOffset),this.xOffset=this.xOffset>2*Math.PI?0:this.xOffset+this.speed,requestAnimationFrame(this.animator.bind(this))}render({speed:t=.1}){this.speed=t,requestAnimationFrame(this.animator.bind(this))}}({el:"#chart",canvasWidth:500,canvasHeight:500,startX:0,xOffset:0,waveWidth:.05,waveHeight:20}).render({speed:.05})}],[[0,0]]]);